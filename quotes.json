[
  {
    "quote": "Good software practice requires such discipline(Total Productive Maintenance): focus, presence of mind, and thinking. It is not always just about doing, about pushing the factory equipment to produce at the optimal velocity. \nOne of the major pillars of TPM is the set of so-called 5S principles. \nSeiri, or organization (think “sort” in English). Knowing where things are—using approaches such as suitable naming—is crucial. \nSeiton, or tidiness (think “systematize” in English). There is an old American saying: A place for everything, and everything in its place. A piece of code should be where you expect to find it—and, if not, you should re-factor to get it there. \nSeiso, or cleaning (think “shine” in English): Keep the workplace free of hanging wires, grease, scraps, and waste. What do the authors here say about littering your code with comments and commented-out code lines that capture history or wishes for the future? Get rid of them. \nSeiketsu, or standardization: The group agrees about how to keep the workplace clean. \nShutsuke, or discipline (self-discipline). This means having the discipline to follow the practices and to frequently reflect on one’s work and be willing to change.",
    "note": null
  },
  {
    "quote": "Clean code is not just cost effective; it's a matter of professional survival.",
    "note": null
  },
  {
    "quote": "We are deeply complicit in the planning of the project and share a great deal of the responsibility for any failures; especially if those failures have to do with bad code!",
    "note": "We tend to blame stupid managers and useless marketing types. But we are the ones the managers and marketers look to for promises and commitments. We have choices and should speak up, and of course, write clean code."
  },
  {
    "quote": "The only way to make the deadline-the only way to go fast-is to keep the code as clean as possible at all times.",
    "note": null
  },
  {
    "quote": "A programmer who writes clean code is an artist who can take a blank screen through a series of transformations until it is an elegantly code system.",
    "note": "wow when programing turns into art"
  },
  {
    "quote": "I like my code to be elegant and efficient. The logic should be straightforward to make it hard for bugs to hide, the dependencies minimal to ease maintenance, error handling complete according to an articulated strategy, and performance close to optimal so as not to tempt people to make the code messy with unprincipled optimization. Clean code does one thing well._By: Bjarne Stroutstrup, inventor of C++",
    "note": null
  },
  {
    "quote": "Clean code can be read, and enhanced by a developer other than its original author. It has unit and acceptance tests. It has meaningful names. It has minimal dependencies, which are explicitly defined, and provides a clear and minimal API. Code should be literate since depending on the language, not all necessary information can be expressed clearly in code alone._By: Dave Thomas, founder of OTI",
    "note": null
  }
]